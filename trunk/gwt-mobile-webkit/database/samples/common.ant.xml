<project name="samples-common">
  <property name="gwt.root" location="../.." />
  <property name="project.tail" value="samples/${sample.root}" />
  <import file="${gwt.root}/common.ant.xml" />

  <!-- 
    Number of localworkers for sample compilation.  This depends on your
    hardware, so it's a good candidate to specify in local.ant.properties
    if this default isn't good for you.  Ideally, it should approximate
    the number of CPU cores in your machine.
  -->
  <property name="gwt.samples.localworkers" value="2" />

  <property name="sample.lower" value="${sample.root}" />
  <property name="sample.upper" value="${sample.module}" />

  <!-- Mirror directory for scripts; makes building distro easier -->
  <property name="samples.scripts" value="${gwt.build.out}/samples-scripts" />
  <!-- Use the uppercase name rather than the lowercase name -->
  <property name="sample.build" value="${gwt.build.out}/samples/${sample.upper}" />

  <target name="source" description="Copy source to the output folder">
    <mkdir dir="${sample.build}/src" />
    <copy todir="${sample.build}/src">
      <fileset dir="src" />
    </copy>
    <mkdir dir="${sample.build}/war" />
    <copy todir="${sample.build}/war">
      <fileset dir="war" excludes="WEB-INF/classes/**"/>
    </copy>
  </target>

  <target name="compile" description="Compile all java files">
    <mkdir dir="${sample.build}/war/WEB-INF/classes" />
    <gwt.javac destdir="${sample.build}/war/WEB-INF/classes">
      <classpath>
        <pathelement location="${mobile.webkit.api.jar}" />
        <pathelement location="${gwt.user.jar}" />
        <pathelement location="${gwt.dev.jar}" />
      </classpath>
    </gwt.javac>
  </target>

  <target name="gwtc" description="Compile to JavaScript">
    <outofdate>
      <sourcefiles>
        <fileset dir="src" />
        <fileset dir="${sample.build}/war/WEB-INF/classes" />
        <fileset file="${mobile.webkit.api.jar}" />
        <fileset file="${gwt.user.jar}" />
        <fileset file="${gwt.dev.jar}" />
      </sourcefiles>
      <targetfiles path="${sample.build}/war/${sample.lower}/${sample.lower}.nocache.js" />
      <sequential>
        <mkdir dir="${sample.build}/war" />
        <gwt.timer name="${sample.upper} with ${gwt.samples.localworkers} localWorkers">
          <java dir="${sample.build}" classname="com.google.gwt.dev.Compiler" classpath="src:${sample.build}/war/WEB-INF/classes:${mobile.webkit.api.jar}:${gwt.user.jar}:${gwt.dev.jar}" fork="yes" failonerror="true">
            <jvmarg value="-Xmx256M" />
            <!--jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,address=8000" /-->
            <arg value="-localWorkers" />
            <arg value="${gwt.samples.localworkers}" />
            <arg value="-war" />
            <arg file="${sample.build}/war" />
            <arg value="-compileReport" />
            <arg value="-gen" />
            <arg value=".gwt-gen" />
            <!--arg value="-logLevel" />
            <arg value="INFO" />
            <arg value="-style" />
            <arg value="PRETTY" /-->
            <arg value="com.google.code.gwt.${sample.api}.sample.${sample.lower}.${sample.module}" />
          </java>
        </gwt.timer>
        <length property="sample.size">
          <fileset dir="${sample.build}/war/${sample.lower}" includes="*.cache.html,*.cache.js" />
        </length>
        <echo message="output size for ${sample.upper} is ${sample.size} bytes" />
      </sequential>
    </outofdate>
  </target>

  <target name="scripts" description="Create launch scripts">
    <mkdir dir="${sample.build}/launch-scripts" />
    <copy todir="${sample.build}/launch-scripts">
      <fileset dir="launch-scripts" />
    </copy>
  </target>

  <target name="build" depends="source, compile, gwtc, scripts" description="Build and package this project" />

  <target name="prepare.hosted" depends="source, compile" description="Prepares this project for running hosted mode" />

  <target name="checkstyle" description="Static analysis of source">
    <gwt.checkstyle outputdirectory="${sample.build}">
      <fileset dir="src" />
    </gwt.checkstyle>
  </target>

  <target name="clean" description="Cleans this project's intermediate and output files">
    <delete dir="${sample.build}" />
    <delete includeemptydirs="true">
      <fileset dir="${samples.scripts}">
        <include name="*/${sample.upper}/**" />
      </fileset>
    </delete>
  </target>
  
  <target name="hosted" description="Run hosted mode">
    <condition property="hostedmode.class" value="com.google.gwt.dev.DevMode" else="com.google.gwt.dev.HostedMode">
      <isset property="is.gwt2" />
    </condition>
    <java failonerror="true" fork="true" classname="${hostedmode.class}">
      <classpath>
        <pathelement location="src" />
        <pathelement location="${mobile.webkit.api.jar}" />
        <pathelement location="${gwt.user.jar}" />
        <pathelement location="${gwt.dev.jar}" />
      </classpath>
      <jvmarg line="${hostedmode.platform.args}" />
      <jvmarg value="-Xmx256M" />
      <!--jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,address=8000" /-->
      <!--arg value="-logLevel" />
      <arg value="INFO" />
      <arg value="-style" />
      <arg value="PRETTY" /-->
      <arg value="-war" />
      <arg value="${sample.build}/war" />
      <arg value="-startupUrl" />
      <arg value="${sample.module}.html" />
      <arg value="com.google.code.gwt.${sample.api}.sample.${sample.lower}.${sample.module}" />
    </java>
  </target>
  
  <target name="run" description="Run compiled">
    <java failonerror="true" fork="true" classname="org.mortbay.jetty.Main">
      <classpath>
        <pathelement location="${mobile.webkit.api.jar}" />
        <pathelement location="${gwt.dev.jar}" />
        <pathelement location="${gwt.servlet.jar}" />
      </classpath>
      <jvmarg value="-Xmx256M" />
      <arg value="8080" />
      <arg value="-webapp" />
      <arg value="${sample.build}/war" />
    </java>
  </target>

</project>
